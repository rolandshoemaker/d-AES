Wrote profile results to dAES.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: dAES.py
Function: getShift at line 76

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    76                                           @profile
    77                                           def getShift(key):
    78         2            0      0.0      0.0  		shiftCount = 0
    79        34           18      0.5     40.0  		for i, k in enumerate(key):
    80        32           27      0.8     60.0  				shiftCount ^= k*(i+1)%(0xFF+1)
    81         2            0      0.0      0.0  		return shiftCount

Total time: 0.000814 s
File: dAES.py
Function: getIndex at line 83

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    83                                           @profile
    84                                           def getIndex(k, usedRow, usedColumn):
    85        32           22      0.7      2.7  		coord = []
    86        32           34      1.1      4.2  		coord.append(k&0x0F) # row
    87        32           29      0.9      3.6  		coord.append(k>>4) # column
    88        32           27      0.8      3.3  		if not coord[0] in usedRow:
    89        20           11      0.6      1.4  				coord[0] = 0
    90       169           98      0.6     12.0  				while not coord[0] in usedRow:
    91       149           93      0.6     11.4  						coord[0] += 1
    92        20           24      1.2      2.9  				usedRow.pop(usedRow.index(coord[0]))
    93                                           		else:
    94        12           24      2.0      2.9  				usedRow.pop(usedRow.index(coord[0]))
    95                                           
    96        32           24      0.8      2.9  		if not coord[1] in usedColumn:
    97        32           23      0.7      2.8  				coord[1] = 0
    98       272          185      0.7     22.7  				while not coord[1] in usedColumn:
    99       240          166      0.7     20.4  						coord[1] += 1
   100        32           37      1.2      4.5  				usedColumn.pop(usedColumn.index(coord[1]))
   101                                           		else:
   102                                           				usedColumn.pop(usedColumn.index(coord[1]))
   103        32           17      0.5      2.1  		return coord

Total time: 0.001659 s
File: dAES.py
Function: shiftRow at line 105

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   105                                           @profile
   106                                           def shiftRow(row, shift, newSbox):
   107        32           66      2.1      4.0  		rowItems = list(range(row*16, (row*16)+16))
   108        32           70      2.2      4.2  		rowNew = [0]*256
   109       544          373      0.7     22.5  		for i, item in enumerate(rowItems):
   110       512          437      0.9     26.3  				rowNew[(i+shift)%16] = newSbox[i]
   111       544          348      0.6     21.0  		for i, item in enumerate(rowItems):
   112       512          365      0.7     22.0  				newSbox[i] = rowNew[i]

Total time: 0.001859 s
File: dAES.py
Function: shiftColumn at line 114

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   114                                           @profile
   115                                           def shiftColumn(column, shift, newSbox):
   116        32           71      2.2      3.8  		columnItems = list(range(column, 256-(15-column), 16))
   117        32           68      2.1      3.7  		columnNew = [0]*256
   118       544          319      0.6     17.2  		for i in columnItems:
   119       512          431      0.8     23.2  				columnNew[(i+shift)%16] = newSbox[i]
   120       544          327      0.6     17.6  		for i in columnItems:
   121       512          643      1.3     34.6  				newSbox[(i+shift)%16] = columnNew[(i+shift)%16]

Total time: 0.002657 s
File: dAES.py
Function: swap at line 123

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   123                                           @profile
   124                                           def swap(coords, newSbox):
   125        32           73      2.3      2.7  		rowItems = list(range(coords[0]*16, (coords[0]*16)+16))
   126        32           69      2.2      2.6  		columnItems = list(range(coords[1], 256-(15-coords[1]), 16))
   127        32           63      2.0      2.4  		rowNew = [0]*256
   128        32           66      2.1      2.5  		columnNew = [0]*256
   129       544          430      0.8     16.2  		for a, b in zip(rowItems, columnItems):
   130       512          403      0.8     15.2  				columnNew[b] = newSbox[a]
   131       512          385      0.8     14.5  				rowNew[a] = newSbox[b]
   132       544          406      0.7     15.3  		for a, b in zip(rowItems, columnItems):
   133       512          381      0.7     14.3  				newSbox[b] = columnNew[b]
   134       512          381      0.7     14.3  				newSbox[a] = rowNew[a]

Total time: 0.01357 s
File: dAES.py
Function: sboxRound at line 136

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   136                                           @profile
   137                                           def sboxRound(key, newSbox):
   138         2          112     56.0      0.8  		shiftCount = getShift(key)
   139         2            6      3.0      0.0  		usedRow = list(range(16))
   140         2            3      1.5      0.0  		usedColumn = list(range(16))
   141        34           20      0.6      0.1  		for i in key:
   142        32         1594     49.8     11.7  				coord = getIndex(i, usedRow, usedColumn)
   143        32         3201    100.0     23.6  				shiftRow(coord[0], shiftCount, newSbox)
   144        32         3318    103.7     24.5  				shiftColumn(coord[1], shiftCount, newSbox)
   145        32         5316    166.1     39.2  				swap(coord, newSbox)

Total time: 8.3e-05 s
File: dAES.py
Function: mixKey at line 147

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   147                                           @profile
   148                                           def mixKey(key):
   149         1            1      1.0      1.2  	newKey = []
   150        33           22      0.7     26.5  	for i in range(len(key)):
   151        32           59      1.8     71.1  		newKey.append(key[i]^sum(key))
   152         1            1      1.0      1.2  	return newKey

Total time: 0.017303 s
File: dAES.py
Function: generateDynamicSbox at line 154

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   154                                           @profile
   155                                           def generateDynamicSbox(sbox, key):
   156         1         3435   3435.0     19.9  		newSbox = deepcopy(sbox)
   157         1          131    131.0      0.8  		sboxKey = mixKey(key)
   158         1         8063   8063.0     46.6  		sboxRound(sboxKey[0:16], newSbox)
   159         1         5674   5674.0     32.8  		sboxRound(sboxKey[16:32], newSbox)
   160         1            0      0.0      0.0  		return newSbox

Total time: 0 s
File: dAES.py
Function: invDynamicSbox at line 162

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   162                                           @profile
   163                                           def invDynamicSbox(sbox):
   164                                           		invSbox = [0]*256
   165                                           		for i, byte in enumerate(sbox):
   166                                           				invSbox[sbox[i]] = i
   167                                           		return invSbox

